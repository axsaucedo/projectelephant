<?php

// autoload_real.php generated by Composer

<<<<<<< HEAD
class ComposerAutoloaderInit5c26d0d468be32fe3a3c635663c148a1
=======
class ComposerAutoloaderInitbe75c1c1d3501e08de801f88449d52ad
>>>>>>> 1aea908cb90f13274c7cf69d28a4d03849565ad9
{
    private static $loader;

    public static function loadClassLoader($class)
    {
        if ('Composer\Autoload\ClassLoader' === $class) {
            require __DIR__ . '/ClassLoader.php';
        }
    }

    public static function getLoader()
    {
        if (null !== self::$loader) {
            return self::$loader;
        }

<<<<<<< HEAD
        spl_autoload_register(array('ComposerAutoloaderInit5c26d0d468be32fe3a3c635663c148a1', 'loadClassLoader'), true, true);
        self::$loader = $loader = new \Composer\Autoload\ClassLoader();
        spl_autoload_unregister(array('ComposerAutoloaderInit5c26d0d468be32fe3a3c635663c148a1', 'loadClassLoader'));
=======
        spl_autoload_register(array('ComposerAutoloaderInitbe75c1c1d3501e08de801f88449d52ad', 'loadClassLoader'), true, true);
        self::$loader = $loader = new \Composer\Autoload\ClassLoader();
        spl_autoload_unregister(array('ComposerAutoloaderInitbe75c1c1d3501e08de801f88449d52ad', 'loadClassLoader'));
>>>>>>> 1aea908cb90f13274c7cf69d28a4d03849565ad9

        $vendorDir = dirname(__DIR__);
        $baseDir = dirname($vendorDir);

        $map = require __DIR__ . '/autoload_namespaces.php';
        foreach ($map as $namespace => $path) {
            $loader->set($namespace, $path);
        }

        $classMap = require __DIR__ . '/autoload_classmap.php';
        if ($classMap) {
            $loader->addClassMap($classMap);
        }

        $loader->register(true);

        require $vendorDir . '/symfony/symfony/src/Symfony/Component/Intl/Resources/stubs/functions.php';
        require $vendorDir . '/kriswallsmith/assetic/src/functions.php';
        require $vendorDir . '/swiftmailer/swiftmailer/lib/swift_required.php';

        return $loader;
    }
}
